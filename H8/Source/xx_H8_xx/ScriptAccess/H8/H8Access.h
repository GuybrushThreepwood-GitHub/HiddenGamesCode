
/*===================================================================
	File: H8Access.h
	Game: H8

	(C)Hidden Games
=====================================================================*/

#ifndef __H8ACCESS_H__
#define __H8ACCESS_H__

#include "ScriptBase.h"

// forward declare
class ScriptDataHolder;

struct GameData
{
	float ACHIEVEMENT_ICON_MAXX;
	float ACHIEVEMENT_ICON_SPEED;
	float ACHIEVEMENT_ICON_SHOWTIME;

	float ADBAR_PHONE_POSX;
	float ADBAR_PHONE_POSY;	
	float ADBAR_PHONEHD_POSX;
	float ADBAR_PHONEHD_POSY;
	float ADBAR_TABLET_POSX;
	float ADBAR_TABLET_POSY;
	float ADBAR_TABLETHD_POSX;
	float ADBAR_TABLETHD_POSY;

	// ui
	int MAX_PLAYLISTNAME_CHARACTERS;
	int MAX_SONGNAME_CHARACTERS;
	float ANALOGUE_DEAD_ZONE;


	float BG_HLAYER1_SPEED;
	float BG_HLAYER1_MAX_SPEED;
	float BG_HLAYER1_SPEED_INC_PER_LEVEL;
	GLenum BG_HLAYER1_BLEND_SRC;
	GLenum BG_HLAYER1_BLEND_DEST;
	
	float BG_HLAYER2_SPEED;
	float BG_HLAYER2_MAX_SPEED;
	float BG_HLAYER2_SPEED_INC_PER_LEVEL;
	GLenum BG_HLAYER2_BLEND_SRC;
	GLenum BG_HLAYER2_BLEND_DEST;

	float BG_HLAYER3_SPEED;
	float BG_HLAYER3_MAX_SPEED;
	float BG_HLAYER3_SPEED_INC_PER_LEVEL;
	GLenum BG_HLAYER3_BLEND_SRC;
	GLenum BG_HLAYER3_BLEND_DEST;	
	
	float BG_VLAYER1_SPEED;
	float BG_VLAYER1_MAX_SPEED;
	float BG_VLAYER1_SPEED_INC_PER_LEVEL;
	GLenum BG_VLAYER1_BLEND_SRC;
	GLenum BG_VLAYER1_BLEND_DEST;
	
	float BG_VLAYER2_SPEED;
	float BG_VLAYER2_MAX_SPEED;
	float BG_VLAYER2_SPEED_INC_PER_LEVEL;
	GLenum BG_VLAYER2_BLEND_SRC;
	GLenum BG_VLAYER2_BLEND_DEST;

	float BG_VLAYER3_SPEED;
	float BG_VLAYER3_MAX_SPEED;
	float BG_VLAYER3_SPEED_INC_PER_LEVEL;
	GLenum BG_VLAYER3_BLEND_SRC;
	GLenum BG_VLAYER3_BLEND_DEST;	

	// game
	float CAMERA_POS_TITLE_Z;
	float CAMERA_POS_GAME_Z;

	float INSTRUCTIONS_FADE_TIME;

	int LEVELUP_COUNT;
	int LEVEL_SPEED_UP_START;
	int TROJAN_MIN_APPEAR_LEVEL;
	int VIRUS_MIN_APPEAR_LEVEL;

	int TROJAN_APPEAR_PROBABILITY;
	int VIRUS_APPEAR_PROBABILITY;

	float DOWNLOADBAR_TIME;
	float DOWNLOADBAR_MAX_WIDTH;
	float DOWNLOADBAR_MAX_HEIGHT;
	int DOWNLOADBAR_POINT_BONUS;

	int CONSECUTIVE_BONUS;
	int COMPLETE_ROUTINE;

	// core
	float CORE_RADIUS;
	int CORE_START_HEALTH;
	float CORE_CHANGE_TIME_MIN;
	float CORE_CHANGE_TIME_MAX;
	int CORE_PETAL_COUNT;

	// shield
	float SHIELD_MASS;
	float SHIELD_MASS_INERTIA;
	float SHIELD_ANGULAR_DAMPING;

	float SHIELD_ROTATIONAL_FORCE;
	float SHIELD_MINIMAL_PIXEL_MOVEMENT;

	float SHIELD_DISABLE_TIME;
	float SHIELD_PIECE_ANIM_TIME;

	//enemy

	float ENEMY_RESET_BOUND_X;
	float ENEMY_RESET_BOUND_Y;	
	
	float ENEMY_ATTACK_TIME_MIN;
	float ENEMY_ATTACK_TIME_MAX;	

	float ENEMY_MASS;
	float ENEMY_INERTIA;
	float ENEMY_ATTACK_FORCE;
	
	float ENEMY_ATTACK_INC;
	float ENEMY_ATTACK_MAX_FORCE;
	float ENEMY_RANDOM_ANGULAR_MIN;
	float ENEMY_RANDOM_ANGULAR_MAX;

	float ENEMY_RADIUS_VALID;
	float ENEMY_RADIUS_CORRUPT;
	float ENEMY_RADIUS_TROJAN;
	float ENEMY_RADIUS_VIRUS;
	float ENEMY_RADIUS_BULLET;
	float ENEMY_RADIUS_HACK;

	float ENEMY_TROJAN_COLOUR_SWAP_TIME;
	float ENEMY_TROJAN_COLOUR_SWAP_STOP_RADIUS;

	float ENEMY_VIRUS_CIRCLE_DISTANCE_MIN;
	float ENEMY_VIRUS_CIRCLE_DISTANCE_MAX;
	float ENEMY_VIRUS_CIRCLE_SPEED;
	int ENEMY_VIRUS_BULLETS;

	float ENEMY_VIRUS_BULLET_FIRE_TIME;

	int ENEMY_DAMAGE_CORE_VALID;
	int ENEMY_DAMAGE_CORE_CORRUPT;
	int ENEMY_DAMAGE_CORE_TROJAN;
	int ENEMY_DAMAGE_CORE_VIRUS;
	int ENEMY_DAMAGE_CORE_BULLET;
	int ENEMY_DAMAGE_CORE_HACK;

	int POINTS_ENEMY_MATCH_VALID;
	int POINTS_ENEMY_MATCH_CORRUPT;
	int POINTS_ENEMY_MATCH_TROJAN;
	int POINTS_ENEMY_MATCH_VIRUS;
	int POINTS_ENEMY_MATCH_BULLET;
	int POINTS_ENEMY_MATCH_HACK;

	int ENEMY_MISMATCH_SHIELD_VALID;
	int ENEMY_MISMATCH_SHIELD_CORRUPT;
	int ENEMY_MISMATCH_SHIELD_TROJAN;
	int ENEMY_MISMATCH_SHIELD_VIRUS;
	int ENEMY_MISMATCH_SHIELD_BULLET;
	int ENEMY_MISMATCH_SHIELD_HACK;
};

void RegisterH8Functions( ScriptDataHolder& dataHolder );

int ScriptSetGameData( lua_State* pState );

#endif // __H8ACCESS_H__
